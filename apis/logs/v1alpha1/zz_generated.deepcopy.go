//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.Flowgger != nil {
		in, out := &in.Flowgger, &out.Flowgger
		*out = make([]FlowggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logstash != nil {
		in, out := &in.Logstash, &out.Logstash
		*out = make([]LogstashInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.Flowgger != nil {
		in, out := &in.Flowgger, &out.Flowgger
		*out = make([]FlowggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logstash != nil {
		in, out := &in.Logstash, &out.Logstash
		*out = make([]LogstashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Flowgger != nil {
		in, out := &in.Flowgger, &out.Flowgger
		*out = make([]FlowggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logstash != nil {
		in, out := &in.Logstash, &out.Logstash
		*out = make([]LogstashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowggerInitParameters) DeepCopyInto(out *FlowggerInitParameters) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogFraming != nil {
		in, out := &in.LogFraming, &out.LogFraming
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowggerInitParameters.
func (in *FlowggerInitParameters) DeepCopy() *FlowggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlowggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowggerObservation) DeepCopyInto(out *FlowggerObservation) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogFraming != nil {
		in, out := &in.LogFraming, &out.LogFraming
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowggerObservation.
func (in *FlowggerObservation) DeepCopy() *FlowggerObservation {
	if in == nil {
		return nil
	}
	out := new(FlowggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowggerParameters) DeepCopyInto(out *FlowggerParameters) {
	*out = *in
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogFraming != nil {
		in, out := &in.LogFraming, &out.LogFraming
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowggerParameters.
func (in *FlowggerParameters) DeepCopy() *FlowggerParameters {
	if in == nil {
		return nil
	}
	out := new(FlowggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsCluster) DeepCopyInto(out *LogsCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsCluster.
func (in *LogsCluster) DeepCopy() *LogsCluster {
	if in == nil {
		return nil
	}
	out := new(LogsCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogsCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterInitParameters) DeepCopyInto(out *LogsClusterInitParameters) {
	*out = *in
	if in.ArchiveAllowedNetworks != nil {
		in, out := &in.ArchiveAllowedNetworks, &out.ArchiveAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DirectInputAllowedNetworks != nil {
		in, out := &in.DirectInputAllowedNetworks, &out.DirectInputAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryAllowedNetworks != nil {
		in, out := &in.QueryAllowedNetworks, &out.QueryAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterInitParameters.
func (in *LogsClusterInitParameters) DeepCopy() *LogsClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterList) DeepCopyInto(out *LogsClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogsCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterList.
func (in *LogsClusterList) DeepCopy() *LogsClusterList {
	if in == nil {
		return nil
	}
	out := new(LogsClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogsClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterObservation) DeepCopyInto(out *LogsClusterObservation) {
	*out = *in
	if in.ArchiveAllowedNetworks != nil {
		in, out := &in.ArchiveAllowedNetworks, &out.ArchiveAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DirectInputAllowedNetworks != nil {
		in, out := &in.DirectInputAllowedNetworks, &out.DirectInputAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsUnlocked != nil {
		in, out := &in.IsUnlocked, &out.IsUnlocked
		*out = new(bool)
		**out = **in
	}
	if in.QueryAllowedNetworks != nil {
		in, out := &in.QueryAllowedNetworks, &out.QueryAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterObservation.
func (in *LogsClusterObservation) DeepCopy() *LogsClusterObservation {
	if in == nil {
		return nil
	}
	out := new(LogsClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterParameters) DeepCopyInto(out *LogsClusterParameters) {
	*out = *in
	if in.ArchiveAllowedNetworks != nil {
		in, out := &in.ArchiveAllowedNetworks, &out.ArchiveAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DirectInputAllowedNetworks != nil {
		in, out := &in.DirectInputAllowedNetworks, &out.DirectInputAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryAllowedNetworks != nil {
		in, out := &in.QueryAllowedNetworks, &out.QueryAllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterParameters.
func (in *LogsClusterParameters) DeepCopy() *LogsClusterParameters {
	if in == nil {
		return nil
	}
	out := new(LogsClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterSpec) DeepCopyInto(out *LogsClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterSpec.
func (in *LogsClusterSpec) DeepCopy() *LogsClusterSpec {
	if in == nil {
		return nil
	}
	out := new(LogsClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsClusterStatus) DeepCopyInto(out *LogsClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsClusterStatus.
func (in *LogsClusterStatus) DeepCopy() *LogsClusterStatus {
	if in == nil {
		return nil
	}
	out := new(LogsClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInput) DeepCopyInto(out *LogsInput) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInput.
func (in *LogsInput) DeepCopy() *LogsInput {
	if in == nil {
		return nil
	}
	out := new(LogsInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogsInput) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputInitParameters) DeepCopyInto(out *LogsInputInitParameters) {
	*out = *in
	if in.AllowedNetworks != nil {
		in, out := &in.AllowedNetworks, &out.AllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EngineID != nil {
		in, out := &in.EngineID, &out.EngineID
		*out = new(string)
		**out = **in
	}
	if in.ExposedPort != nil {
		in, out := &in.ExposedPort, &out.ExposedPort
		*out = new(string)
		**out = **in
	}
	if in.NbInstance != nil {
		in, out := &in.NbInstance, &out.NbInstance
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputInitParameters.
func (in *LogsInputInitParameters) DeepCopy() *LogsInputInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsInputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputList) DeepCopyInto(out *LogsInputList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogsInput, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputList.
func (in *LogsInputList) DeepCopy() *LogsInputList {
	if in == nil {
		return nil
	}
	out := new(LogsInputList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogsInputList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputObservation) DeepCopyInto(out *LogsInputObservation) {
	*out = *in
	if in.AllowedNetworks != nil {
		in, out := &in.AllowedNetworks, &out.AllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EngineID != nil {
		in, out := &in.EngineID, &out.EngineID
		*out = new(string)
		**out = **in
	}
	if in.ExposedPort != nil {
		in, out := &in.ExposedPort, &out.ExposedPort
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InputID != nil {
		in, out := &in.InputID, &out.InputID
		*out = new(string)
		**out = **in
	}
	if in.IsRestartRequired != nil {
		in, out := &in.IsRestartRequired, &out.IsRestartRequired
		*out = new(bool)
		**out = **in
	}
	if in.NbInstance != nil {
		in, out := &in.NbInstance, &out.NbInstance
		*out = new(float64)
		**out = **in
	}
	if in.PublicAddress != nil {
		in, out := &in.PublicAddress, &out.PublicAddress
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputObservation.
func (in *LogsInputObservation) DeepCopy() *LogsInputObservation {
	if in == nil {
		return nil
	}
	out := new(LogsInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputParameters) DeepCopyInto(out *LogsInputParameters) {
	*out = *in
	if in.AllowedNetworks != nil {
		in, out := &in.AllowedNetworks, &out.AllowedNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EngineID != nil {
		in, out := &in.EngineID, &out.EngineID
		*out = new(string)
		**out = **in
	}
	if in.ExposedPort != nil {
		in, out := &in.ExposedPort, &out.ExposedPort
		*out = new(string)
		**out = **in
	}
	if in.NbInstance != nil {
		in, out := &in.NbInstance, &out.NbInstance
		*out = new(float64)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputParameters.
func (in *LogsInputParameters) DeepCopy() *LogsInputParameters {
	if in == nil {
		return nil
	}
	out := new(LogsInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputSpec) DeepCopyInto(out *LogsInputSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputSpec.
func (in *LogsInputSpec) DeepCopy() *LogsInputSpec {
	if in == nil {
		return nil
	}
	out := new(LogsInputSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInputStatus) DeepCopyInto(out *LogsInputStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInputStatus.
func (in *LogsInputStatus) DeepCopy() *LogsInputStatus {
	if in == nil {
		return nil
	}
	out := new(LogsInputStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashInitParameters) DeepCopyInto(out *LogstashInitParameters) {
	*out = *in
	if in.FilterSection != nil {
		in, out := &in.FilterSection, &out.FilterSection
		*out = new(string)
		**out = **in
	}
	if in.InputSection != nil {
		in, out := &in.InputSection, &out.InputSection
		*out = new(string)
		**out = **in
	}
	if in.PatternSection != nil {
		in, out := &in.PatternSection, &out.PatternSection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashInitParameters.
func (in *LogstashInitParameters) DeepCopy() *LogstashInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashObservation) DeepCopyInto(out *LogstashObservation) {
	*out = *in
	if in.FilterSection != nil {
		in, out := &in.FilterSection, &out.FilterSection
		*out = new(string)
		**out = **in
	}
	if in.InputSection != nil {
		in, out := &in.InputSection, &out.InputSection
		*out = new(string)
		**out = **in
	}
	if in.PatternSection != nil {
		in, out := &in.PatternSection, &out.PatternSection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashObservation.
func (in *LogstashObservation) DeepCopy() *LogstashObservation {
	if in == nil {
		return nil
	}
	out := new(LogstashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashParameters) DeepCopyInto(out *LogstashParameters) {
	*out = *in
	if in.FilterSection != nil {
		in, out := &in.FilterSection, &out.FilterSection
		*out = new(string)
		**out = **in
	}
	if in.InputSection != nil {
		in, out := &in.InputSection, &out.InputSection
		*out = new(string)
		**out = **in
	}
	if in.PatternSection != nil {
		in, out := &in.PatternSection, &out.PatternSection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashParameters.
func (in *LogstashParameters) DeepCopy() *LogstashParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashParameters)
	in.DeepCopyInto(out)
	return out
}
