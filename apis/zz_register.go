/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/edixos/provider-ovh/apis/additionalip/v1alpha1"
	v1alpha1cloud "github.com/edixos/provider-ovh/apis/cloud/v1alpha1"
	v1alpha1clouddiskarray "github.com/edixos/provider-ovh/apis/clouddiskarray/v1alpha1"
	v1alpha1databases "github.com/edixos/provider-ovh/apis/databases/v1alpha1"
	v1alpha1dedicatedserver "github.com/edixos/provider-ovh/apis/dedicatedserver/v1alpha1"
	v1alpha1dns "github.com/edixos/provider-ovh/apis/dns/v1alpha1"
	v1alpha1gateway "github.com/edixos/provider-ovh/apis/gateway/v1alpha1"
	v1alpha1iam "github.com/edixos/provider-ovh/apis/iam/v1alpha1"
	v1alpha1kube "github.com/edixos/provider-ovh/apis/kube/v1alpha1"
	v1alpha1lb "github.com/edixos/provider-ovh/apis/lb/v1alpha1"
	v1alpha1logs "github.com/edixos/provider-ovh/apis/logs/v1alpha1"
	v1alpha1me "github.com/edixos/provider-ovh/apis/me/v1alpha1"
	v1alpha1nas "github.com/edixos/provider-ovh/apis/nas/v1alpha1"
	v1alpha1network "github.com/edixos/provider-ovh/apis/network/v1alpha1"
	v1alpha1privatesql "github.com/edixos/provider-ovh/apis/privatesql/v1alpha1"
	v1alpha1registry "github.com/edixos/provider-ovh/apis/registry/v1alpha1"
	v1alpha1storage "github.com/edixos/provider-ovh/apis/storage/v1alpha1"
	v1alpha1apis "github.com/edixos/provider-ovh/apis/v1alpha1"
	v1beta1 "github.com/edixos/provider-ovh/apis/v1beta1"
	v1alpha1vminstances "github.com/edixos/provider-ovh/apis/vminstances/v1alpha1"
	v1alpha1vrack "github.com/edixos/provider-ovh/apis/vrack/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1cloud.SchemeBuilder.AddToScheme,
		v1alpha1clouddiskarray.SchemeBuilder.AddToScheme,
		v1alpha1databases.SchemeBuilder.AddToScheme,
		v1alpha1dedicatedserver.SchemeBuilder.AddToScheme,
		v1alpha1dns.SchemeBuilder.AddToScheme,
		v1alpha1gateway.SchemeBuilder.AddToScheme,
		v1alpha1iam.SchemeBuilder.AddToScheme,
		v1alpha1kube.SchemeBuilder.AddToScheme,
		v1alpha1lb.SchemeBuilder.AddToScheme,
		v1alpha1logs.SchemeBuilder.AddToScheme,
		v1alpha1me.SchemeBuilder.AddToScheme,
		v1alpha1nas.SchemeBuilder.AddToScheme,
		v1alpha1network.SchemeBuilder.AddToScheme,
		v1alpha1privatesql.SchemeBuilder.AddToScheme,
		v1alpha1registry.SchemeBuilder.AddToScheme,
		v1alpha1storage.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1vminstances.SchemeBuilder.AddToScheme,
		v1alpha1vrack.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
