// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/edixos/provider-ovh/apis/accountmanagement/v1alpha1"
	v1alpha1additionalip "github.com/edixos/provider-ovh/apis/additionalip/v1alpha1"
	v1alpha1clouddiskarray "github.com/edixos/provider-ovh/apis/clouddiskarray/v1alpha1"
	v1alpha1dedicatedserver "github.com/edixos/provider-ovh/apis/dedicatedserver/v1alpha1"
	v1alpha1dns "github.com/edixos/provider-ovh/apis/dns/v1alpha1"
	v1alpha1publiccloudnetwork "github.com/edixos/provider-ovh/apis/publiccloudnetwork/v1alpha1"
	v1alpha1apis "github.com/edixos/provider-ovh/apis/v1alpha1"
	v1beta1 "github.com/edixos/provider-ovh/apis/v1beta1"
	v1alpha1vminstances "github.com/edixos/provider-ovh/apis/vminstances/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1additionalip.SchemeBuilder.AddToScheme,
		v1alpha1clouddiskarray.SchemeBuilder.AddToScheme,
		v1alpha1dedicatedserver.SchemeBuilder.AddToScheme,
		v1alpha1dns.SchemeBuilder.AddToScheme,
		v1alpha1publiccloudnetwork.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1vminstances.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
