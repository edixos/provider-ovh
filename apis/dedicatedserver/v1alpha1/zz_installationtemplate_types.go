// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomizationInitParameters struct {

	// Template change log details
	ChangeLog *string `json:"changeLog,omitempty" tf:"change_log,omitempty"`

	// Set up the server using the provided hostname instead of the default hostname
	CustomHostname *string `json:"customHostname,omitempty" tf:"custom_hostname,omitempty"`

	// Indicate the URL where your postinstall customisation script is located
	PostInstallationScriptLink *string `json:"postInstallationScriptLink,omitempty" tf:"post_installation_script_link,omitempty"`

	// indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
	PostInstallationScriptReturn *string `json:"postInstallationScriptReturn,omitempty" tf:"post_installation_script_return,omitempty"`

	Rating *float64 `json:"rating,omitempty" tf:"rating,omitempty"`

	// Name of the ssh key that should be installed. Password login will be disabled
	SSHKeyName *string `json:"sshKeyName,omitempty" tf:"ssh_key_name,omitempty"`

	// Use the distribution's native kernel instead of the recommended OVH Kernel
	UseDistributionKernel *bool `json:"useDistributionKernel,omitempty" tf:"use_distribution_kernel,omitempty"`
}

type CustomizationObservation struct {

	// Template change log details
	ChangeLog *string `json:"changeLog,omitempty" tf:"change_log,omitempty"`

	// Set up the server using the provided hostname instead of the default hostname
	CustomHostname *string `json:"customHostname,omitempty" tf:"custom_hostname,omitempty"`

	// Indicate the URL where your postinstall customisation script is located
	PostInstallationScriptLink *string `json:"postInstallationScriptLink,omitempty" tf:"post_installation_script_link,omitempty"`

	// indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
	PostInstallationScriptReturn *string `json:"postInstallationScriptReturn,omitempty" tf:"post_installation_script_return,omitempty"`

	Rating *float64 `json:"rating,omitempty" tf:"rating,omitempty"`

	// Name of the ssh key that should be installed. Password login will be disabled
	SSHKeyName *string `json:"sshKeyName,omitempty" tf:"ssh_key_name,omitempty"`

	// Use the distribution's native kernel instead of the recommended OVH Kernel
	UseDistributionKernel *bool `json:"useDistributionKernel,omitempty" tf:"use_distribution_kernel,omitempty"`
}

type CustomizationParameters struct {

	// Template change log details
	// +kubebuilder:validation:Optional
	ChangeLog *string `json:"changeLog,omitempty" tf:"change_log,omitempty"`

	// Set up the server using the provided hostname instead of the default hostname
	// +kubebuilder:validation:Optional
	CustomHostname *string `json:"customHostname,omitempty" tf:"custom_hostname,omitempty"`

	// Indicate the URL where your postinstall customisation script is located
	// +kubebuilder:validation:Optional
	PostInstallationScriptLink *string `json:"postInstallationScriptLink,omitempty" tf:"post_installation_script_link,omitempty"`

	// indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
	// +kubebuilder:validation:Optional
	PostInstallationScriptReturn *string `json:"postInstallationScriptReturn,omitempty" tf:"post_installation_script_return,omitempty"`

	// +kubebuilder:validation:Optional
	Rating *float64 `json:"rating,omitempty" tf:"rating,omitempty"`

	// Name of the ssh key that should be installed. Password login will be disabled
	// +kubebuilder:validation:Optional
	SSHKeyName *string `json:"sshKeyName,omitempty" tf:"ssh_key_name,omitempty"`

	// Use the distribution's native kernel instead of the recommended OVH Kernel
	// +kubebuilder:validation:Optional
	UseDistributionKernel *bool `json:"useDistributionKernel,omitempty" tf:"use_distribution_kernel,omitempty"`
}

type InstallationTemplateInitParameters struct {

	// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
	BaseTemplateName *string `json:"baseTemplateName,omitempty" tf:"base_template_name,omitempty"`

	Customization []CustomizationInitParameters `json:"customization,omitempty" tf:"customization,omitempty"`

	// The default language of this template
	DefaultLanguage *string `json:"defaultLanguage,omitempty" tf:"default_language,omitempty"`

	// Remove default partition schemes at creation
	RemoveDefaultPartitionSchemes *bool `json:"removeDefaultPartitionSchemes,omitempty" tf:"remove_default_partition_schemes,omitempty"`

	// This template name
	TemplateName *string `json:"templateName,omitempty" tf:"template_name,omitempty"`
}

type InstallationTemplateObservation struct {

	// List of all language available for this template
	AvailableLanguages []*string `json:"availableLanguages,omitempty" tf:"available_languages,omitempty"`

	// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
	BaseTemplateName *string `json:"baseTemplateName,omitempty" tf:"base_template_name,omitempty"`

	// This distribution is new and, although tested and functional, may still display odd behaviour
	Beta *bool `json:"beta,omitempty" tf:"beta,omitempty"`

	// This template bit format (32 or 64)
	BitFormat *float64 `json:"bitFormat,omitempty" tf:"bit_format,omitempty"`

	// Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	Customization []CustomizationObservation `json:"customization,omitempty" tf:"customization,omitempty"`

	// The default language of this template
	DefaultLanguage *string `json:"defaultLanguage,omitempty" tf:"default_language,omitempty"`

	// is this distribution deprecated
	Deprecated *bool `json:"deprecated,omitempty" tf:"deprecated,omitempty"`

	// information about this template
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// the distribution this template is based on
	Distribution *string `json:"distribution,omitempty" tf:"distribution,omitempty"`

	// this template family type (bsd,linux,solaris,windows)
	Family *string `json:"family,omitempty" tf:"family,omitempty"`

	// Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
	Filesystems []*string `json:"filesystems,omitempty" tf:"filesystems,omitempty"`

	// This distribution supports hardware raid configuration through the OVH API
	HardRaidConfiguration *bool `json:"hardRaidConfiguration,omitempty" tf:"hard_raid_configuration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Date of last modification of the base image
	LastModification *string `json:"lastModification,omitempty" tf:"last_modification,omitempty"`

	// This distribution supports Logical Volumes (Linux LVM)
	LvmReady *bool `json:"lvmReady,omitempty" tf:"lvm_ready,omitempty"`

	// Remove default partition schemes at creation
	RemoveDefaultPartitionSchemes *bool `json:"removeDefaultPartitionSchemes,omitempty" tf:"remove_default_partition_schemes,omitempty"`

	// This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
	SupportsDistributionKernel *bool `json:"supportsDistributionKernel,omitempty" tf:"supports_distribution_kernel,omitempty"`

	// This distribution supports RTM software
	SupportsRtm *bool `json:"supportsRtm,omitempty" tf:"supports_rtm,omitempty"`

	// This distribution supports the microsoft SQL server
	SupportsSQLServer *bool `json:"supportsSqlServer,omitempty" tf:"supports_sql_server,omitempty"`

	// This template name
	TemplateName *string `json:"templateName,omitempty" tf:"template_name,omitempty"`
}

type InstallationTemplateParameters struct {

	// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
	// +kubebuilder:validation:Optional
	BaseTemplateName *string `json:"baseTemplateName,omitempty" tf:"base_template_name,omitempty"`

	// +kubebuilder:validation:Optional
	Customization []CustomizationParameters `json:"customization,omitempty" tf:"customization,omitempty"`

	// The default language of this template
	// +kubebuilder:validation:Optional
	DefaultLanguage *string `json:"defaultLanguage,omitempty" tf:"default_language,omitempty"`

	// Remove default partition schemes at creation
	// +kubebuilder:validation:Optional
	RemoveDefaultPartitionSchemes *bool `json:"removeDefaultPartitionSchemes,omitempty" tf:"remove_default_partition_schemes,omitempty"`

	// This template name
	// +kubebuilder:validation:Optional
	TemplateName *string `json:"templateName,omitempty" tf:"template_name,omitempty"`
}

// InstallationTemplateSpec defines the desired state of InstallationTemplate
type InstallationTemplateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstallationTemplateParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstallationTemplateInitParameters `json:"initProvider,omitempty"`
}

// InstallationTemplateStatus defines the observed state of InstallationTemplate.
type InstallationTemplateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstallationTemplateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// InstallationTemplate is the Schema for the InstallationTemplates API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ovh}
type InstallationTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.baseTemplateName) || (has(self.initProvider) && has(self.initProvider.baseTemplateName))",message="spec.forProvider.baseTemplateName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultLanguage) || (has(self.initProvider) && has(self.initProvider.defaultLanguage))",message="spec.forProvider.defaultLanguage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.templateName) || (has(self.initProvider) && has(self.initProvider.templateName))",message="spec.forProvider.templateName is a required parameter"
	Spec   InstallationTemplateSpec   `json:"spec"`
	Status InstallationTemplateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstallationTemplateList contains a list of InstallationTemplates
type InstallationTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InstallationTemplate `json:"items"`
}

// Repository type metadata.
var (
	InstallationTemplate_Kind             = "InstallationTemplate"
	InstallationTemplate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: InstallationTemplate_Kind}.String()
	InstallationTemplate_KindAPIVersion   = InstallationTemplate_Kind + "." + CRDGroupVersion.String()
	InstallationTemplate_GroupVersionKind = CRDGroupVersion.WithKind(InstallationTemplate_Kind)
)

func init() {
	SchemeBuilder.Register(&InstallationTemplate{}, &InstallationTemplateList{})
}
