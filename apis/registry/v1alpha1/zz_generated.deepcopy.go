//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesInitParameters) DeepCopyInto(out *FeaturesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesInitParameters.
func (in *FeaturesInitParameters) DeepCopy() *FeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesObservation) DeepCopyInto(out *FeaturesObservation) {
	*out = *in
	if in.Vulnerability != nil {
		in, out := &in.Vulnerability, &out.Vulnerability
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesObservation.
func (in *FeaturesObservation) DeepCopy() *FeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesParameters) DeepCopyInto(out *FeaturesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesParameters.
func (in *FeaturesParameters) DeepCopy() *FeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanInitParameters) DeepCopyInto(out *PlanInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanInitParameters.
func (in *PlanInitParameters) DeepCopy() *PlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanObservation) DeepCopyInto(out *PlanObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryLimits != nil {
		in, out := &in.RegistryLimits, &out.RegistryLimits
		*out = make([]RegistryLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanObservation.
func (in *PlanObservation) DeepCopy() *PlanObservation {
	if in == nil {
		return nil
	}
	out := new(PlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanParameters) DeepCopyInto(out *PlanParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanParameters.
func (in *PlanParameters) DeepCopy() *PlanParameters {
	if in == nil {
		return nil
	}
	out := new(PlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistry) DeepCopyInto(out *ProjectContainerregistry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistry.
func (in *ProjectContainerregistry) DeepCopy() *ProjectContainerregistry {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryInitParameters) DeepCopyInto(out *ProjectContainerregistryInitParameters) {
	*out = *in
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryInitParameters.
func (in *ProjectContainerregistryInitParameters) DeepCopy() *ProjectContainerregistryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryList) DeepCopyInto(out *ProjectContainerregistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryList.
func (in *ProjectContainerregistryList) DeepCopy() *ProjectContainerregistryList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryObservation) DeepCopyInto(out *ProjectContainerregistryObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = make([]PlanObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryObservation.
func (in *ProjectContainerregistryObservation) DeepCopy() *ProjectContainerregistryObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidc) DeepCopyInto(out *ProjectContainerregistryOidc) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidc.
func (in *ProjectContainerregistryOidc) DeepCopy() *ProjectContainerregistryOidc {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryOidc) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcInitParameters) DeepCopyInto(out *ProjectContainerregistryOidcInitParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcInitParameters.
func (in *ProjectContainerregistryOidcInitParameters) DeepCopy() *ProjectContainerregistryOidcInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcList) DeepCopyInto(out *ProjectContainerregistryOidcList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryOidc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcList.
func (in *ProjectContainerregistryOidcList) DeepCopy() *ProjectContainerregistryOidcList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryOidcList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcObservation) DeepCopyInto(out *ProjectContainerregistryOidcObservation) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcObservation.
func (in *ProjectContainerregistryOidcObservation) DeepCopy() *ProjectContainerregistryOidcObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcParameters) DeepCopyInto(out *ProjectContainerregistryOidcParameters) {
	*out = *in
	if in.DeleteUsers != nil {
		in, out := &in.DeleteUsers, &out.DeleteUsers
		*out = new(bool)
		**out = **in
	}
	if in.OidcAdminGroup != nil {
		in, out := &in.OidcAdminGroup, &out.OidcAdminGroup
		*out = new(string)
		**out = **in
	}
	if in.OidcAutoOnboard != nil {
		in, out := &in.OidcAutoOnboard, &out.OidcAutoOnboard
		*out = new(bool)
		**out = **in
	}
	if in.OidcClientID != nil {
		in, out := &in.OidcClientID, &out.OidcClientID
		*out = new(string)
		**out = **in
	}
	out.OidcClientSecretSecretRef = in.OidcClientSecretSecretRef
	if in.OidcEndpoint != nil {
		in, out := &in.OidcEndpoint, &out.OidcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.OidcGroupsClaim != nil {
		in, out := &in.OidcGroupsClaim, &out.OidcGroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcName != nil {
		in, out := &in.OidcName, &out.OidcName
		*out = new(string)
		**out = **in
	}
	if in.OidcScope != nil {
		in, out := &in.OidcScope, &out.OidcScope
		*out = new(string)
		**out = **in
	}
	if in.OidcUserClaim != nil {
		in, out := &in.OidcUserClaim, &out.OidcUserClaim
		*out = new(string)
		**out = **in
	}
	if in.OidcVerifyCert != nil {
		in, out := &in.OidcVerifyCert, &out.OidcVerifyCert
		*out = new(bool)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcParameters.
func (in *ProjectContainerregistryOidcParameters) DeepCopy() *ProjectContainerregistryOidcParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcSpec) DeepCopyInto(out *ProjectContainerregistryOidcSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcSpec.
func (in *ProjectContainerregistryOidcSpec) DeepCopy() *ProjectContainerregistryOidcSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryOidcStatus) DeepCopyInto(out *ProjectContainerregistryOidcStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryOidcStatus.
func (in *ProjectContainerregistryOidcStatus) DeepCopy() *ProjectContainerregistryOidcStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryOidcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryParameters) DeepCopyInto(out *ProjectContainerregistryParameters) {
	*out = *in
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryParameters.
func (in *ProjectContainerregistryParameters) DeepCopy() *ProjectContainerregistryParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistrySpec) DeepCopyInto(out *ProjectContainerregistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistrySpec.
func (in *ProjectContainerregistrySpec) DeepCopy() *ProjectContainerregistrySpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryStatus) DeepCopyInto(out *ProjectContainerregistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryStatus.
func (in *ProjectContainerregistryStatus) DeepCopy() *ProjectContainerregistryStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUser) DeepCopyInto(out *ProjectContainerregistryUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUser.
func (in *ProjectContainerregistryUser) DeepCopy() *ProjectContainerregistryUser {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserInitParameters) DeepCopyInto(out *ProjectContainerregistryUserInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserInitParameters.
func (in *ProjectContainerregistryUserInitParameters) DeepCopy() *ProjectContainerregistryUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserList) DeepCopyInto(out *ProjectContainerregistryUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectContainerregistryUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserList.
func (in *ProjectContainerregistryUserList) DeepCopy() *ProjectContainerregistryUserList {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectContainerregistryUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserObservation) DeepCopyInto(out *ProjectContainerregistryUserObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserObservation.
func (in *ProjectContainerregistryUserObservation) DeepCopy() *ProjectContainerregistryUserObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserParameters) DeepCopyInto(out *ProjectContainerregistryUserParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.RegistryID != nil {
		in, out := &in.RegistryID, &out.RegistryID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserParameters.
func (in *ProjectContainerregistryUserParameters) DeepCopy() *ProjectContainerregistryUserParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserSpec) DeepCopyInto(out *ProjectContainerregistryUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserSpec.
func (in *ProjectContainerregistryUserSpec) DeepCopy() *ProjectContainerregistryUserSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectContainerregistryUserStatus) DeepCopyInto(out *ProjectContainerregistryUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectContainerregistryUserStatus.
func (in *ProjectContainerregistryUserStatus) DeepCopy() *ProjectContainerregistryUserStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectContainerregistryUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsInitParameters) DeepCopyInto(out *RegistryLimitsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsInitParameters.
func (in *RegistryLimitsInitParameters) DeepCopy() *RegistryLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsObservation) DeepCopyInto(out *RegistryLimitsObservation) {
	*out = *in
	if in.ImageStorage != nil {
		in, out := &in.ImageStorage, &out.ImageStorage
		*out = new(float64)
		**out = **in
	}
	if in.ParallelRequest != nil {
		in, out := &in.ParallelRequest, &out.ParallelRequest
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsObservation.
func (in *RegistryLimitsObservation) DeepCopy() *RegistryLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryLimitsParameters) DeepCopyInto(out *RegistryLimitsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryLimitsParameters.
func (in *RegistryLimitsParameters) DeepCopy() *RegistryLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryLimitsParameters)
	in.DeepCopyInto(out)
	return out
}
